#!/usr/bin/env python3

import argparse
import os
import random
import re

parser = argparse.ArgumentParser(description="Generate a openvpn.nix file")
parser.add_argument(
    "udp", help="The path to the UDP openvpn files",
    nargs='?',
    default="/etc/openvpn/ovpn_udp/"
)
parser.add_argument(
    "tcp", help="The path to the TCP openvpn files",
    nargs='?',
    default="/etc/openvpn/ovpn_tcp/"
)
parser.add_argument(
    "--autostart", "-a", help="Which region should be autostarted."
)

args = parser.parse_args()
re_region = re.compile("^[a-z]+")


def generate(path, suffix="", limit=5):
    endpointmap = {}
    with os.scandir(path) as scanner:
        for entry in scanner:
            if not entry.is_file():
                continue
            m = re_region.match(entry.name)
            endpoints = endpointmap.setdefault(m.group(), [])
            if len(endpoints) >= limit:
                continue
            endpoints.append(entry.path)

    endpointmap = sorted(endpointmap.items(), key=lambda entry: entry[0])
    for region, endpoints in endpointmap:
        random.shuffle(endpoints)

        for i, endpoint in enumerate(endpoints):
            autostart = "false"
            if args.autostart == region+suffix and i == 0:
                autostart = "true"
            stri = str(i) if i != 0 else ""  # empty if zero
            print(
                f"    \"{region+suffix}{stri}\" = {{ "
                f"config = \"config {endpoint}\"; autoStart = {autostart}; "
                f"}};"
            )


print("""# Generated by openvpn/gen-openvpn.py
{
  services.openvpn.servers = {""")
generate(args.udp)
generate(args.tcp, suffix="-tcp", limit=1)
print("""  };
}""")
